{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport PropTypes from 'prop-types';\nvar styles = {\n  \"test\": \"_styles-module__test__3ybTi\",\n  \"sliderSingleContent\": \"_styles-module__sliderSingleContent__3c5V9\",\n  \"react3dCarousel\": \"_styles-module__react3dCarousel__24jc0\",\n  \"sliderContainer\": \"_styles-module__sliderContainer__1ac0a\",\n  \"sliderContent\": \"_styles-module__sliderContent__2TODB\",\n  \"sliderSingle\": \"_styles-module__sliderSingle__1Dlc_\",\n  \"preactivede\": \"_styles-module__preactivede__1AkrP\",\n  \"preactive\": \"_styles-module__preactive__3YTAI\",\n  \"proactive\": \"_styles-module__proactive__2e5FE\",\n  \"proactivede\": \"_styles-module__proactivede__39-nr\",\n  \"active\": \"_styles-module__active__3sodH\",\n  \"sliderLeft\": \"_styles-module__sliderLeft__2MbHb\",\n  \"sliderRight\": \"_styles-module__sliderRight__1OwVg\",\n  \"sliderLeftNoborders\": \"_styles-module__sliderLeftNoborders__1-KfO\",\n  \"sliderRightNoborders\": \"_styles-module__sliderRightNoborders__1O8RK\",\n  \"sliderDisabled\": \"_styles-module__sliderDisabled__1aC52\",\n  \"heartbeat\": \"_styles-module__heartbeat__2IKEy\"\n};\n\nconst VolkenoCarousel = props => {\n  const [slideTotal, setSlideTotal] = React.useState(0);\n  const [slideCurrent, setSlideCurrent] = useState(-1);\n  const [slides, setSlides] = useState([]);\n  const intervalRef = useRef(null);\n  const nextRef = useRef();\n  const handlers = useSwipeable({\n    onSwipedLeft: () => slideRight(),\n    onSwipedRight: () => slideLeft(),\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n  useEffect(() => {\n    const locSlides = [];\n    props.slides.forEach(slide => {\n      const slideobject = {\n        class: styles.sliderSingle + ' ' + styles.proactivede,\n        element: slide\n      };\n      locSlides.push(slideobject);\n    });\n    console.log('slides', locSlides);\n\n    if (props.slides.length === 2) {\n      props.slides.forEach(slide => {\n        const slideobject = {\n          class: styles.sliderSingle + ' ' + styles.proactivede,\n          element: slide\n        };\n        locSlides.push(slideobject);\n      });\n    }\n\n    setSlides(locSlides);\n    setSlideTotal(locSlides.length - 1);\n    setSlideCurrent(-1);\n\n    if (slideCurrent === -1) {\n      console.log('2');\n      setTimeout(() => {\n        nextRef.current.click();\n\n        if (props !== null && props !== void 0 && props.autoplay) {\n          intervalRef.current = setTimeout(() => {\n            nextRef.current.click();\n          }, props === null || props === void 0 ? void 0 : props.interval);\n        }\n      }, 500);\n    }\n  }, [props.slides]);\n\n  const slideRight = () => {\n    var _slide$;\n\n    let preactiveSlide;\n    let proactiveSlide;\n    let slideCurrentLoc = slideCurrent;\n    const activeClass = styles.sliderSingle + ' ' + styles.active;\n    const slide = [...slides];\n\n    if (slideTotal > 1) {\n      if (slideCurrentLoc < slideTotal) {\n        slideCurrentLoc++;\n      } else {\n        slideCurrentLoc = 0;\n      }\n\n      if (slideCurrentLoc > 0) {\n        preactiveSlide = slide[slideCurrentLoc - 1];\n      } else {\n        preactiveSlide = slide[slideTotal];\n      }\n\n      const activeSlide = slide[slideCurrentLoc];\n\n      if (slideCurrentLoc < slideTotal) {\n        proactiveSlide = slide[slideCurrentLoc + 1];\n      } else {\n        proactiveSlide = slide[0];\n      }\n\n      slide.forEach(slid => {\n        var _slid$class, _slid$class2;\n\n        if (slid !== null && slid !== void 0 && (_slid$class = slid.class) !== null && _slid$class !== void 0 && _slid$class.includes('proactivede')) {\n          slid.class = styles.sliderSingle + ' ' + styles.proactivede;\n        }\n\n        if (slid !== null && slid !== void 0 && (_slid$class2 = slid.class) !== null && _slid$class2 !== void 0 && _slid$class2.includes('preactivede')) {\n          slid.class = styles.sliderSingle + ' ' + styles.preactivede;\n        }\n      });\n      preactiveSlide.class = styles.sliderSingle + ' ' + styles.preactive;\n      activeSlide.class = activeClass;\n      proactiveSlide.class = styles.sliderSingle + ' ' + styles.proactive;\n      setSlides(slide);\n      console.log('slid show', slide);\n      setSlideCurrent(slideCurrentLoc);\n      console.log('active', document.getElementsByClassName(`${styles.sliderSingle}`));\n\n      if (document.getElementsByClassName(`${styles.sliderSingle} ${styles.active}`).length > 0) {\n        console.log('here');\n        setTimeout(() => {\n          if (document.getElementsByClassName(`${styles.sliderSingle} ${styles.active}`).length > 0) ;\n        }, 100);\n      }\n\n      props.onSlideChange(slideCurrentLoc);\n      console.log('current', slideCurrentLoc);\n\n      if (props !== null && props !== void 0 && props.autoplay) {\n        clearTimeout(intervalRef === null || intervalRef === void 0 ? void 0 : intervalRef.current);\n        intervalRef.current = setTimeout(() => {\n          nextRef.current.click();\n        }, props === null || props === void 0 ? void 0 : props.interval);\n      }\n    } else if (slide[0] && ((_slide$ = slide[0]) === null || _slide$ === void 0 ? void 0 : _slide$.class) !== activeClass) {\n      slide[0].class = activeClass;\n      setSlides(slide);\n      setSlideCurrent(0);\n    }\n  };\n\n  const slideLeft = () => {\n    if (slideTotal > 1) {\n      var _document$getElements;\n\n      let preactiveSlide;\n      let proactiveSlide;\n      let slideCurrentLoc = slideCurrent;\n      const slide = [...slides];\n\n      if (slideCurrentLoc > 0) {\n        slideCurrentLoc--;\n      } else {\n        slideCurrentLoc = slideTotal;\n      }\n\n      if (slideCurrentLoc < slideTotal) {\n        proactiveSlide = slide[slideCurrentLoc + 1];\n      } else {\n        proactiveSlide = slide[0];\n      }\n\n      const activeSlide = slide[slideCurrentLoc];\n\n      if (slideCurrentLoc > 0) {\n        preactiveSlide = slide[slideCurrentLoc - 1];\n      } else {\n        preactiveSlide = slide[slideTotal];\n      }\n\n      slide.forEach(slid => {\n        var _slid$class3;\n\n        if (slid !== null && slid !== void 0 && (_slid$class3 = slid.class) !== null && _slid$class3 !== void 0 && _slid$class3.includes('proactivede')) {\n          slid.class = styles.sliderSingle + ' ' + styles.preactivede;\n        }\n\n        if (slid.class.includes('proactive')) {\n          slid.class = styles.sliderSingle + ' ' + styles.proactivede;\n        }\n      });\n      preactiveSlide.class = styles.sliderSingle + ' ' + styles.preactive;\n      activeSlide.class = styles.sliderSingle + ' ' + styles.active;\n      proactiveSlide.class = styles.sliderSingle + ' ' + styles.proactive;\n      setSlides(slide);\n      setSlideCurrent(slideCurrentLoc);\n      props.onSlideChange(slideCurrentLoc);\n\n      if (((_document$getElements = document.getElementsByClassName(`${styles.sliderSingle} ${styles.active}`)) === null || _document$getElements === void 0 ? void 0 : _document$getElements.length) > 0) {\n        setTimeout(() => {\n          if (document.getElementsByClassName(`${styles.sliderSingle} ${styles.active}`).length > 0) ;\n        }, 500);\n      }\n    }\n  };\n\n  const sliderClass = direction => {\n    let sliderClass = `slider${direction}`;\n\n    if (direction === 'Right') {\n      sliderClass = styles.sliderRight;\n    }\n\n    if (direction === 'Left') {\n      sliderClass = styles.sliderLeft;\n    }\n\n    if (!(props !== null && props !== void 0 && props.arrows)) {\n      sliderClass = styles.sliderDisabled;\n    } else if (props !== null && props !== void 0 && props.arrows && !(props !== null && props !== void 0 && props.arrowBorders)) {\n      if (direction === 'Right') {\n        sliderClass = styles.sliderRightNoborders;\n      }\n\n      if (direction === 'Left') {\n        sliderClass = styles.sliderLeftNoborders;\n      }\n    }\n\n    return sliderClass;\n  };\n\n  return React.createElement(\"div\", Object.assign({\n    className: `${styles.react3dCarousel}`\n  }, handlers), slides && (slides === null || slides === void 0 ? void 0 : slides.length) > 0 ? React.createElement(\"div\", {\n    className: `${styles.sliderContainer}`\n  }, React.createElement(\"div\", {\n    className: `${styles.sliderContent}`\n  }, slides.map((slider, index) => React.createElement(\"div\", {\n    className: `${styles.sliderSingle} ${styles.active} ${styles.preactive} ${styles.proactive}`,\n    key: index\n  }, React.createElement(\"div\", {\n    className: sliderClass('Left'),\n    onClick: () => slideLeft()\n  }, React.createElement(\"div\", null, React.createElement(\"i\", {\n    className: 'fa fa-arrow-left'\n  }))), React.createElement(\"div\", {\n    className: sliderClass('Right'),\n    onClick: () => slideRight(),\n    ref: nextRef\n  }, React.createElement(\"div\", null, React.createElement(\"i\", {\n    className: 'fa fa-arrow-right'\n  }))), React.createElement(\"div\", {\n    className: `${styles.sliderSingleContent}`\n  }, slider === null || slider === void 0 ? void 0 : slider.element))))) : React.createElement(\"p\", null, \"NO data\"));\n};\n\nVolkenoCarousel.propTypes = {\n  slides: PropTypes.arrayOf(PropTypes.element),\n  autoplay: PropTypes.bool,\n  interval: PropTypes.number,\n  arrows: PropTypes.bool,\n  arrowBorders: PropTypes.bool,\n  onSlideChange: PropTypes.func\n};\nVolkenoCarousel.defaultProps = {\n  autoplay: false,\n  interval: 3000,\n  arrows: true,\n  arrowBorders: true,\n  onSlideChange: function () {}\n};\nexport { VolkenoCarousel };","map":{"version":3,"sources":["../src/index.tsx"],"names":["VolkenoCarousel","props","React","useState","intervalRef","useRef","nextRef","handlers","useSwipeable","onSwipedLeft","slideRight","onSwipedRight","slideLeft","preventDefaultTouchmoveEvent","trackMouse","useEffect","locSlides","slide","slideobject","class","styles","element","console","setSlides","setSlideTotal","setSlideCurrent","slideCurrent","setTimeout","slideCurrentLoc","activeClass","slideTotal","preactiveSlide","activeSlide","proactiveSlide","slid","document","sliderSingle","active","clearTimeout","sliderClass","direction","className","react3dCarousel","slides","sliderContainer","sliderContent","preactive","proactive","key","index","onClick","ref","sliderSingleContent","slider","PropTypes","autoplay","interval","arrows","arrowBorders","onSlideChange","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { useSwipeable } from 'react-swipeable'\nimport PropTypes from 'prop-types'\nimport styles from './styles.module.css'\n\nexport const VolkenoCarousel = (props: any) => {\n  const [slideTotal, setSlideTotal] = React.useState<any>(0)\n  const [slideCurrent, setSlideCurrent] = useState<any>(-1)\n  const [slides, setSlides] = useState<any>([])\n  // const [height, setHeight] = useState<any>('0px')\n  const intervalRef = useRef<any>(null)\n  const nextRef = useRef<any>()\n  const handlers = useSwipeable({\n    onSwipedLeft: () => slideRight(),\n    onSwipedRight: () => slideLeft(),\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  })\n  useEffect(() => {\n    const locSlides: any = []\n\n    props.slides.forEach((slide: any) => {\n      const slideobject: any = {\n        class: styles.sliderSingle + ' ' + styles.proactivede,\n        element: slide\n      }\n      locSlides.push(slideobject)\n    })\n    console.log('slides', locSlides)\n    if (props.slides.length === 2) {\n      props.slides.forEach((slide: any) => {\n        const slideobject = {\n          class: styles.sliderSingle + ' ' + styles.proactivede,\n          element: slide\n        }\n        locSlides.push(slideobject)\n      })\n    }\n    setSlides(locSlides)\n    setSlideTotal(locSlides.length - 1)\n    setSlideCurrent(-1)\n    if (slideCurrent === -1) {\n      console.log('2')\n      setTimeout(() => {\n        nextRef.current.click()\n        if (props?.autoplay) {\n          intervalRef.current = setTimeout(() => {\n            nextRef.current.click()\n          }, props?.interval)\n        }\n      }, 500)\n    }\n  }, [props.slides])\n\n  const slideRight = () => {\n    let preactiveSlide: any\n    let proactiveSlide: any\n    let slideCurrentLoc = slideCurrent\n\n    const activeClass: any = styles.sliderSingle + ' ' + styles.active\n    const slide = [...slides]\n\n    if (slideTotal > 1) {\n      if (slideCurrentLoc < slideTotal) {\n        slideCurrentLoc++\n      } else {\n        slideCurrentLoc = 0\n      }\n      if (slideCurrentLoc > 0) {\n        preactiveSlide = slide[slideCurrentLoc - 1]\n      } else {\n        preactiveSlide = slide[slideTotal]\n      }\n\n      const activeSlide = slide[slideCurrentLoc]\n      if (slideCurrentLoc < slideTotal) {\n        proactiveSlide = slide[slideCurrentLoc + 1]\n      } else {\n        proactiveSlide = slide[0]\n      }\n\n      slide.forEach((slid: any) => {\n        // console.log('slid', slid?.class.includes('proactivede'))\n        if (slid?.class?.includes('proactivede')) {\n          slid.class = styles.sliderSingle + ' ' + styles.proactivede\n        }\n        if (slid?.class?.includes('preactivede')) {\n          slid.class = styles.sliderSingle + ' ' + styles.preactivede\n        }\n      })\n\n      preactiveSlide.class = styles.sliderSingle + ' ' + styles.preactive\n      activeSlide.class = activeClass\n      proactiveSlide.class = styles.sliderSingle + ' ' + styles.proactive\n      setSlides(slide)\n      console.log('slid show', slide)\n      setSlideCurrent(slideCurrentLoc)\n      console.log(\n        'active',\n        document.getElementsByClassName(`${styles.sliderSingle}`)\n      )\n      if (\n        document.getElementsByClassName(\n          `${styles.sliderSingle} ${styles.active}`\n        ).length > 0\n      ) {\n        console.log('here')\n        setTimeout(() => {\n          if (\n            document.getElementsByClassName(\n              `${styles.sliderSingle} ${styles.active}`\n            ).length > 0\n          ) {\n            // const height = document.getElementsByClassName(\n            //   'slider-single active'\n            // )[0]?.clientHeight\n            // setHeight(`${height}px`)\n          }\n        }, 100)\n      }\n      props.onSlideChange(slideCurrentLoc)\n      console.log('current', slideCurrentLoc)\n      if (props?.autoplay) {\n        clearTimeout(intervalRef?.current)\n        intervalRef.current = setTimeout(() => {\n          nextRef.current.click()\n        }, props?.interval)\n      }\n    } else if (slide[0] && slide[0]?.class !== activeClass) {\n      slide[0].class = activeClass\n      setSlides(slide)\n      setSlideCurrent(0)\n    }\n  }\n\n  const slideLeft = () => {\n    if (slideTotal > 1) {\n      let preactiveSlide\n      let proactiveSlide\n      let slideCurrentLoc: any = slideCurrent\n      const slide = [...slides]\n      if (slideCurrentLoc > 0) {\n        slideCurrentLoc--\n      } else {\n        slideCurrentLoc = slideTotal\n      }\n\n      if (slideCurrentLoc < slideTotal) {\n        proactiveSlide = slide[slideCurrentLoc + 1]\n      } else {\n        proactiveSlide = slide[0]\n      }\n      const activeSlide = slide[slideCurrentLoc]\n      if (slideCurrentLoc > 0) {\n        preactiveSlide = slide[slideCurrentLoc - 1]\n      } else {\n        preactiveSlide = slide[slideTotal]\n      }\n      slide.forEach((slid) => {\n        if (slid?.class?.includes('proactivede')) {\n          slid.class = styles.sliderSingle + ' ' + styles.preactivede\n        }\n        if (slid.class.includes('proactive')) {\n          slid.class = styles.sliderSingle + ' ' + styles.proactivede\n        }\n      })\n      preactiveSlide.class = styles.sliderSingle + ' ' + styles.preactive\n      activeSlide.class = styles.sliderSingle + ' ' + styles.active\n      proactiveSlide.class = styles.sliderSingle + ' ' + styles.proactive\n      setSlides(slide)\n      setSlideCurrent(slideCurrentLoc)\n      props.onSlideChange(slideCurrentLoc)\n      if (\n        document.getElementsByClassName(\n          `${styles.sliderSingle} ${styles.active}`\n        )?.length > 0\n      ) {\n        setTimeout(() => {\n          if (\n            document.getElementsByClassName(\n              `${styles.sliderSingle} ${styles.active}`\n            ).length > 0\n          ) {\n            // const height = document.getElementsByClassName(\n            //   'slider-single active'\n            // )[0].clientHeight\n            // setHeight(`${height}px`)\n          }\n        }, 500)\n      }\n    }\n  }\n\n  const sliderClass = (direction: any) => {\n    let sliderClass = `slider${direction}`\n    if (direction === 'Right') {\n      sliderClass = styles.sliderRight\n    }\n    if (direction === 'Left') {\n      sliderClass = styles.sliderLeft\n    }\n    if (!props?.arrows) {\n      sliderClass = styles.sliderDisabled\n    } else if (props?.arrows && !props?.arrowBorders) {\n      if (direction === 'Right') {\n        sliderClass = styles.sliderRightNoborders\n      }\n      if (direction === 'Left') {\n        sliderClass = styles.sliderLeftNoborders\n      }\n    }\n\n    return sliderClass\n  }\n\n  //   console.log(\"slides\", slides);\n\n  return (\n    <div className={`${styles.react3dCarousel}`} {...handlers}>\n      {slides && slides?.length > 0 ? (\n        <div className={`${styles.sliderContainer}`}>\n          <div className={`${styles.sliderContent}`}>\n            {slides.map((slider: any, index: any) => (\n              <div\n                className={`${styles.sliderSingle} ${styles.active} ${styles.preactive} ${styles.proactive}`}\n                key={index}\n              >\n                <div\n                  className={sliderClass('Left')}\n                  onClick={() => slideLeft()}\n                >\n                  <div>\n                    <i className='fa fa-arrow-left' />\n                  </div>\n                </div>\n                <div\n                  className={sliderClass('Right')}\n                  onClick={() => slideRight()}\n                  ref={nextRef}\n                >\n                  <div>\n                    <i className='fa fa-arrow-right' />\n                  </div>\n                </div>\n\n                <div className={`${styles.sliderSingleContent}`}>\n                  {slider?.element}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <p>NO data</p>\n      )}\n    </div>\n  )\n}\n\nVolkenoCarousel.propTypes = {\n  slides: PropTypes.arrayOf(PropTypes.element),\n  autoplay: PropTypes.bool,\n  interval: PropTypes.number,\n  arrows: PropTypes.bool,\n  arrowBorders: PropTypes.bool,\n  onSlideChange: PropTypes.func\n}\nVolkenoCarousel.defaultProps = {\n  autoplay: false,\n  interval: 3000,\n  arrows: true,\n  arrowBorders: true,\n  onSlideChange: function () {}\n}\n"]},"metadata":{},"sourceType":"module"}