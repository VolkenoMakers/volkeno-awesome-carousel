{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport PropTypes from 'prop-types';\nvar styles = {\n  \"test\": \"_styles-module__test__3ybTi\",\n  \"sliderSingleContent\": \"_styles-module__sliderSingleContent__3c5V9\",\n  \"react3dCarousel\": \"_styles-module__react3dCarousel__24jc0\",\n  \"sliderContainer\": \"_styles-module__sliderContainer__1ac0a\",\n  \"sliderContent\": \"_styles-module__sliderContent__2TODB\",\n  \"sliderSingle\": \"_styles-module__sliderSingle__1Dlc_\",\n  \"preactive\": \"_styles-module__preactive__3YTAI\",\n  \"proactive\": \"_styles-module__proactive__2e5FE\",\n  \"proactivede\": \"_styles-module__proactivede__39-nr\",\n  \"active\": \"_styles-module__active__3sodH\",\n  \"sliderLeft\": \"_styles-module__sliderLeft__2MbHb\",\n  \"sliderRight\": \"_styles-module__sliderRight__1OwVg\",\n  \"sliderLeftNoborders\": \"_styles-module__sliderLeftNoborders__1-KfO\",\n  \"sliderRightNoborders\": \"_styles-module__sliderRightNoborders__1O8RK\",\n  \"sliderDisabled\": \"_styles-module__sliderDisabled__1aC52\",\n  \"heartbeat\": \"_styles-module__heartbeat__2IKEy\"\n};\n\nfunction Carousel(props) {\n  const [slideTotal, setSlideTotal] = useState(0);\n  const [slideCurrent, setSlideCurrent] = useState(-1);\n  const [slides, setSlides] = useState([]);\n  const intervalRef = useRef(null);\n  const nextRef = useRef();\n  const handlers = useSwipeable({\n    onSwipedLeft: () => slideRight(),\n    onSwipedRight: () => slideLeft(),\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n  useEffect(() => {\n    const locSlides = [];\n    console.log('slides', props);\n    props.slides.forEach(slide => {\n      const slideobject = {\n        class: 'slider-single proactivede',\n        element: slide\n      };\n      locSlides.push(slideobject);\n    });\n\n    if (props.slides.length === 2) {\n      props.slides.forEach(slide => {\n        const slideobject = {\n          class: 'slider-single proactivede',\n          element: slide\n        };\n        locSlides.push(slideobject);\n      });\n    }\n\n    setSlides(locSlides);\n    setSlideTotal(locSlides.length - 1);\n    setSlideCurrent(-1);\n\n    if (slideCurrent === -1) {\n      console.log('2');\n      setTimeout(() => {\n        nextRef.current.click();\n\n        if (props !== null && props !== void 0 && props.autoplay) {\n          intervalRef.current = setTimeout(() => {\n            nextRef.current.click();\n          }, props === null || props === void 0 ? void 0 : props.interval);\n        }\n      }, 500);\n    }\n  }, [props.slides]);\n\n  const slideRight = () => {\n    var _slide$;\n\n    let preactiveSlide;\n    let proactiveSlide;\n    let slideCurrentLoc = slideCurrent;\n    const activeClass = 'slider-single active';\n    const slide = [...slides];\n\n    if (slideTotal > 1) {\n      if (slideCurrentLoc < slideTotal) {\n        slideCurrentLoc++;\n      } else {\n        slideCurrentLoc = 0;\n      }\n\n      if (slideCurrentLoc > 0) {\n        preactiveSlide = slide[slideCurrentLoc - 1];\n      } else {\n        preactiveSlide = slide[slideTotal];\n      }\n\n      const activeSlide = slide[slideCurrentLoc];\n\n      if (slideCurrentLoc < slideTotal) {\n        proactiveSlide = slide[slideCurrentLoc + 1];\n      } else {\n        proactiveSlide = slide[0];\n      }\n\n      slide.forEach(slid => {\n        var _slid$class, _slid$class2;\n\n        if (slid !== null && slid !== void 0 && (_slid$class = slid.class) !== null && _slid$class !== void 0 && _slid$class.includes('preactivede')) {\n          slid.class = 'slider-single proactivede';\n        }\n\n        if (slid !== null && slid !== void 0 && (_slid$class2 = slid.class) !== null && _slid$class2 !== void 0 && _slid$class2.includes('preactive')) {\n          slid.class = 'slider-single preactivede';\n        }\n      });\n      preactiveSlide.class = 'slider-single preactive';\n      activeSlide.class = activeClass;\n      proactiveSlide.class = 'slider-single proactive';\n      setSlides(slide);\n      setSlideCurrent(slideCurrentLoc);\n\n      if (document.getElementsByClassName('slider-single active').length > 0) {\n        setTimeout(() => {\n          if (document.getElementsByClassName('slider-single active').length > 0) ;\n        }, 100);\n      }\n\n      props.onSlideChange(slideCurrentLoc);\n\n      if (props !== null && props !== void 0 && props.autoplay) {\n        clearTimeout(intervalRef === null || intervalRef === void 0 ? void 0 : intervalRef.current);\n        intervalRef.current = setTimeout(() => {\n          nextRef.current.click();\n        }, props === null || props === void 0 ? void 0 : props.interval);\n      }\n    } else if (slide[0] && ((_slide$ = slide[0]) === null || _slide$ === void 0 ? void 0 : _slide$.class) !== activeClass) {\n      slide[0].class = activeClass;\n      setSlides(slide);\n      setSlideCurrent(0);\n    }\n  };\n\n  const slideLeft = () => {\n    if (slideTotal > 1) {\n      var _document$getElements;\n\n      let preactiveSlide;\n      let proactiveSlide;\n      let slideCurrentLoc = slideCurrent;\n      const slide = [...slides];\n\n      if (slideCurrentLoc > 0) {\n        slideCurrentLoc--;\n      } else {\n        slideCurrentLoc = slideTotal;\n      }\n\n      if (slideCurrentLoc < slideTotal) {\n        proactiveSlide = slide[slideCurrentLoc + 1];\n      } else {\n        proactiveSlide = slide[0];\n      }\n\n      const activeSlide = slide[slideCurrentLoc];\n\n      if (slideCurrentLoc > 0) {\n        preactiveSlide = slide[slideCurrentLoc - 1];\n      } else {\n        preactiveSlide = slide[slideTotal];\n      }\n\n      slide.forEach(slid => {\n        var _slid$class3;\n\n        if (slid !== null && slid !== void 0 && (_slid$class3 = slid.class) !== null && _slid$class3 !== void 0 && _slid$class3.includes('proactivede')) {\n          slid.class = 'slider-single preactivede';\n        }\n\n        if (slid.class.includes('proactive')) {\n          slid.class = 'slider-single proactivede';\n        }\n      });\n      preactiveSlide.class = 'slider-single preactive';\n      activeSlide.class = 'slider-single active';\n      proactiveSlide.class = 'slider-single proactive';\n      setSlides(slide);\n      setSlideCurrent(slideCurrentLoc);\n      props.onSlideChange(slideCurrentLoc);\n\n      if (((_document$getElements = document.getElementsByClassName('slider-single active')) === null || _document$getElements === void 0 ? void 0 : _document$getElements.length) > 0) {\n        setTimeout(() => {\n          if (document.getElementsByClassName('slider-single active').length > 0) ;\n        }, 500);\n      }\n    }\n  };\n\n  const sliderClass = direction => {\n    let sliderClass = `slider-${direction}`;\n\n    if (!(props !== null && props !== void 0 && props.arrows)) {\n      sliderClass = 'slider-disabled';\n    } else if (props !== null && props !== void 0 && props.arrows && !(props !== null && props !== void 0 && props.arrowBorders)) {\n      sliderClass = `slider-${direction}-noborders`;\n    }\n\n    return sliderClass;\n  };\n\n  return React.createElement(\"div\", Object.assign({\n    className: 'react-3d-carousel'\n  }, handlers), slides && (slides === null || slides === void 0 ? void 0 : slides.length) > 0 ? React.createElement(\"div\", {\n    className: 'slider-container'\n  }, React.createElement(\"div\", {\n    className: 'slider-content'\n  }, slides.map((slider, index) => React.createElement(\"div\", {\n    className: 'slider-single',\n    key: index\n  }, React.createElement(\"div\", {\n    className: sliderClass('left'),\n    onClick: () => slideLeft()\n  }, React.createElement(\"div\", null, React.createElement(\"i\", {\n    className: 'fa fa-arrow-left'\n  }))), React.createElement(\"div\", {\n    className: sliderClass('right'),\n    onClick: () => slideRight(),\n    ref: nextRef\n  }, React.createElement(\"div\", null, React.createElement(\"i\", {\n    className: 'fa fa-arrow-right'\n  }))), React.createElement(\"div\", {\n    className: 'slider-single-content'\n  }, slider === null || slider === void 0 ? void 0 : slider.element))))) : React.createElement(\"p\", null, \"NO data\"));\n}\n\nCarousel.propTypes = {\n  slides: PropTypes.arrayOf(PropTypes.element),\n  autoplay: PropTypes.bool,\n  interval: PropTypes.number,\n  arrows: PropTypes.bool,\n  arrowBorders: PropTypes.bool,\n  onSlideChange: PropTypes.func\n};\nCarousel.defaultProps = {\n  autoplay: false,\n  interval: 3000,\n  arrows: true,\n  arrowBorders: true,\n  onSlideChange: function () {}\n};\n\nconst VolkenoCarousel = props => {\n  var _props$slides;\n\n  return React.createElement(\"div\", {\n    className: `${styles.react3dCarousel}`\n  }, props.slides && ((_props$slides = props.slides) === null || _props$slides === void 0 ? void 0 : _props$slides.length) > 0 ? React.createElement(Carousel, {\n    slides: props.slides,\n    onSlideChange: props.onSlideChange\n  }) : React.createElement(\"p\", null, \"NO data\"));\n};\n\nexport { VolkenoCarousel };","map":{"version":3,"sources":["../src/components/Carousel.tsx","../src/index.tsx"],"names":["useState","intervalRef","useRef","nextRef","handlers","useSwipeable","onSwipedLeft","slideRight","onSwipedRight","slideLeft","preventDefaultTouchmoveEvent","trackMouse","useEffect","locSlides","console","props","slide","slideobject","class","element","setSlides","setSlideTotal","setSlideCurrent","slideCurrent","setTimeout","slideCurrentLoc","activeClass","slideTotal","preactiveSlide","activeSlide","proactiveSlide","slid","document","clearTimeout","sliderClass","direction","React","className","slides","key","index","onClick","ref","slider","Carousel","PropTypes","autoplay","interval","arrows","arrowBorders","onSlideChange","func","VolkenoCarousel","styles","react3dCarousel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { useSwipeable } from 'react-swipeable'\nimport PropTypes from 'prop-types'\nimport '../styles.scss'\n\nfunction Carousel(props: any) {\n  const [slideTotal, setSlideTotal] = useState<any>(0)\n  const [slideCurrent, setSlideCurrent] = useState<any>(-1)\n  const [slides, setSlides] = useState<any>([])\n  // const [height, setHeight] = useState<any>('0px')\n  const intervalRef = useRef<any>(null)\n  const nextRef = useRef<any>()\n  const handlers = useSwipeable({\n    onSwipedLeft: () => slideRight(),\n    onSwipedRight: () => slideLeft(),\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  })\n  useEffect(() => {\n    const locSlides: any = []\n    console.log('slides', props)\n    props.slides.forEach((slide: any) => {\n      const slideobject: any = {\n        class: 'slider-single proactivede',\n        element: slide\n      }\n      locSlides.push(slideobject)\n    })\n    if (props.slides.length === 2) {\n      props.slides.forEach((slide: any) => {\n        const slideobject = {\n          class: 'slider-single proactivede',\n          element: slide\n        }\n        locSlides.push(slideobject)\n      })\n    }\n    setSlides(locSlides)\n    setSlideTotal(locSlides.length - 1)\n    setSlideCurrent(-1)\n    if (slideCurrent === -1) {\n      console.log('2')\n      setTimeout(() => {\n        nextRef.current.click()\n        if (props?.autoplay) {\n          intervalRef.current = setTimeout(() => {\n            nextRef.current.click()\n          }, props?.interval)\n        }\n      }, 500)\n    }\n  }, [props.slides])\n\n  const slideRight = () => {\n    let preactiveSlide: any\n    let proactiveSlide: any\n    let slideCurrentLoc = slideCurrent\n\n    const activeClass: any = 'slider-single active'\n    const slide = [...slides]\n\n    if (slideTotal > 1) {\n      if (slideCurrentLoc < slideTotal) {\n        slideCurrentLoc++\n      } else {\n        slideCurrentLoc = 0\n      }\n      if (slideCurrentLoc > 0) {\n        preactiveSlide = slide[slideCurrentLoc - 1]\n      } else {\n        preactiveSlide = slide[slideTotal]\n      }\n\n      const activeSlide = slide[slideCurrentLoc]\n      if (slideCurrentLoc < slideTotal) {\n        proactiveSlide = slide[slideCurrentLoc + 1]\n      } else {\n        proactiveSlide = slide[0]\n      }\n\n      slide.forEach((slid: any) => {\n        // console.log(slid);\n        if (slid?.class?.includes('preactivede')) {\n          slid.class = 'slider-single proactivede'\n        }\n        if (slid?.class?.includes('preactive')) {\n          slid.class = 'slider-single preactivede'\n        }\n      })\n\n      preactiveSlide.class = 'slider-single preactive'\n      activeSlide.class = activeClass\n      proactiveSlide.class = 'slider-single proactive'\n      setSlides(slide)\n      setSlideCurrent(slideCurrentLoc)\n\n      if (document.getElementsByClassName('slider-single active').length > 0) {\n        setTimeout(() => {\n          if (\n            document.getElementsByClassName('slider-single active').length > 0\n          ) {\n            // const height = document.getElementsByClassName(\n            //   'slider-single active'\n            // )[0]?.clientHeight\n            // setHeight(`${height}px`)\n          }\n        }, 100)\n      }\n      props.onSlideChange(slideCurrentLoc)\n      if (props?.autoplay) {\n        clearTimeout(intervalRef?.current)\n        intervalRef.current = setTimeout(() => {\n          nextRef.current.click()\n        }, props?.interval)\n      }\n    } else if (slide[0] && slide[0]?.class !== activeClass) {\n      slide[0].class = activeClass\n      setSlides(slide)\n      setSlideCurrent(0)\n    }\n  }\n\n  const slideLeft = () => {\n    if (slideTotal > 1) {\n      let preactiveSlide\n      let proactiveSlide\n      let slideCurrentLoc: any = slideCurrent\n      const slide = [...slides]\n      if (slideCurrentLoc > 0) {\n        slideCurrentLoc--\n      } else {\n        slideCurrentLoc = slideTotal\n      }\n\n      if (slideCurrentLoc < slideTotal) {\n        proactiveSlide = slide[slideCurrentLoc + 1]\n      } else {\n        proactiveSlide = slide[0]\n      }\n      const activeSlide = slide[slideCurrentLoc]\n      if (slideCurrentLoc > 0) {\n        preactiveSlide = slide[slideCurrentLoc - 1]\n      } else {\n        preactiveSlide = slide[slideTotal]\n      }\n      slide.forEach((slid) => {\n        if (slid?.class?.includes('proactivede')) {\n          slid.class = 'slider-single preactivede'\n        }\n        if (slid.class.includes('proactive')) {\n          slid.class = 'slider-single proactivede'\n        }\n      })\n      preactiveSlide.class = 'slider-single preactive'\n      activeSlide.class = 'slider-single active'\n      proactiveSlide.class = 'slider-single proactive'\n      setSlides(slide)\n      setSlideCurrent(slideCurrentLoc)\n      props.onSlideChange(slideCurrentLoc)\n      if (document.getElementsByClassName('slider-single active')?.length > 0) {\n        setTimeout(() => {\n          if (\n            document.getElementsByClassName('slider-single active').length > 0\n          ) {\n            // const height = document.getElementsByClassName(\n            //   'slider-single active'\n            // )[0].clientHeight\n            // setHeight(`${height}px`)\n          }\n        }, 500)\n      }\n    }\n  }\n\n  const sliderClass = (direction: any) => {\n    let sliderClass = `slider-${direction}`\n    if (!props?.arrows) {\n      sliderClass = 'slider-disabled'\n    } else if (props?.arrows && !props?.arrowBorders) {\n      sliderClass = `slider-${direction}-noborders`\n    }\n    return sliderClass\n  }\n\n  //   console.log(\"slides\", slides);\n\n  return (\n    <div className='react-3d-carousel' {...handlers}>\n      {slides && slides?.length > 0 ? (\n        <div className='slider-container'>\n          <div className='slider-content'>\n            {slides.map((slider: any, index: any) => (\n              <div className='slider-single' key={index}>\n                <div\n                  className={sliderClass('left')}\n                  onClick={() => slideLeft()}\n                >\n                  <div>\n                    <i className='fa fa-arrow-left' />\n                  </div>\n                </div>\n                <div\n                  className={sliderClass('right')}\n                  onClick={() => slideRight()}\n                  ref={nextRef}\n                >\n                  <div>\n                    <i className='fa fa-arrow-right' />\n                  </div>\n                </div>\n\n                <div className='slider-single-content'>{slider?.element}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <p>NO data</p>\n      )}\n    </div>\n  )\n}\n\nexport default Carousel\n\nCarousel.propTypes = {\n  slides: PropTypes.arrayOf(PropTypes.element),\n  autoplay: PropTypes.bool,\n  interval: PropTypes.number,\n  arrows: PropTypes.bool,\n  arrowBorders: PropTypes.bool,\n  onSlideChange: PropTypes.func\n}\nCarousel.defaultProps = {\n  autoplay: false,\n  interval: 3000,\n  arrows: true,\n  arrowBorders: true,\n  onSlideChange: function () {}\n}\n","import React from 'react'\nimport styles from './styles.module.css'\nimport Carousel from './components/Carousel'\n\nexport const VolkenoCarousel = (props: any) => {\n  return (\n    <div className={`${styles.react3dCarousel}`}>\n      {props.slides && props.slides?.length > 0 ? (\n        <Carousel slides={props.slides} onSlideChange={props.onSlideChange} />\n      ) : (\n        <p>NO data</p>\n      )}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}